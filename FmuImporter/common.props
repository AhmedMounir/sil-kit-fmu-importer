<?xml version="1.0" encoding="utf-8"?>

<!-- Copyright (c) Vector Informatik GmbH. All rights reserved. -->

<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <PropertyGroup>
        <Version>1.0.1</Version>
        <Copyright>Copyright (c) Vector Informatik GmbH. All rights reserved.</Copyright>
    </PropertyGroup>

    <!-- Apply Configuration override, if applicable -->
    <PropertyGroup Condition="$(ConfigurationOverride) != ''">
        <Configuration>$(ConfigurationOverride)</Configuration>
    </PropertyGroup>

    <PropertyGroup>
        <GenerateAssemblyInfo>True</GenerateAssemblyInfo>
        <GenerateAssemblyCopyrightInfo>True</GenerateAssemblyCopyrightInfo>
        <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>

        <UseCommonOutputDirectory>False</UseCommonOutputDirectory>
        <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
        <Platforms>x64</Platforms>
        <Platform>x64</Platform>
        <PlatformTarget>x64</PlatformTarget>
        <TargetFramework>net6.0</TargetFramework>
        <RuntimeIdentifiers>linux-x64;win-x64;osx-x64</RuntimeIdentifiers>

        <SatelliteResourceLanguages>en</SatelliteResourceLanguages>
        <InvariantGlobalization>true</InvariantGlobalization>
    </PropertyGroup>

    <!-- Output/Publish directory configuration -->
    <PropertyGroup>
        <OutputPathBase>$(MSBuildProjectDirectory)/../_build/</OutputPathBase>
        <PublishDirBase>$(MSBuildProjectDirectory)/../_publish/</PublishDirBase>
        <SilKitDirBase>$(MSBuildProjectDirectory)/../_silkit/</SilKitDirBase>
    </PropertyGroup>

    <PropertyGroup
        Condition="$(Standalone) == 'True' AND 
                   ($(RuntimeIdentifier)=='linux-x64' OR 
                   ($(RuntimeIdentifier)=='' AND $([MSBuild]::IsOSPlatform('Linux'))))">
        <IntermediateOutputPath>$(MSBuildProjectDirectory)/../_obj/linux-$(Platform)-$(Configuration)/</IntermediateOutputPath>
        <OutputPath>$(OutputPathBase)linux-$(Platform)-$(Configuration)</OutputPath>
        <PublishDir>$(PublishDirBase)linux-$(Platform)/$(Version)</PublishDir>
        <RuntimeIdentifier>linux-$(Platform)</RuntimeIdentifier>
    </PropertyGroup>

    <PropertyGroup
        Condition="$(Standalone) == 'True' AND 
                   ($(RuntimeIdentifier)=='osx-x64' OR 
                   ($(RuntimeIdentifier)=='' AND $([MSBuild]::IsOSPlatform('OSX'))))">
        <IntermediateOutputPath>$(MSBuildProjectDirectory)/../_obj/osx-$(Platform)-$(Configuration)/</IntermediateOutputPath>
        <OutputPath>$(OutputPathBase)osx-$(Platform)-$(Configuration)</OutputPath>
        <PublishDir>$(PublishDirBase)osx-$(Platform)/$(Version)</PublishDir>
        <RuntimeIdentifier>osx-$(Platform)</RuntimeIdentifier>
    </PropertyGroup>

    <PropertyGroup
        Condition="$(Standalone) == 'True' AND 
                   ($(RuntimeIdentifier)=='win-x64' OR 
                   ($(RuntimeIdentifier)=='' AND $([MSBuild]::IsOSPlatform('Windows'))))">
        <IntermediateOutputPath>$(MSBuildProjectDirectory)\..\_obj\win-$(Platform)-$(Configuration)</IntermediateOutputPath>
        <OutputPath>$(MSBuildProjectDirectory)\..\_build\win-$(Platform)-$(Configuration)</OutputPath>
        <PublishDir>$(MSBuildProjectDirectory)\..\_publish\win-$(Platform)\$(Version)</PublishDir>
        <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    </PropertyGroup>

    <PropertyGroup Condition="$(Standalone) != 'True'">
        <IntermediateOutputPath>$(MSBuildProjectDirectory)\..\_obj\crossplatform-$(Platform)-$(Configuration)</IntermediateOutputPath>
        <OutputPath>$(MSBuildProjectDirectory)\..\_build\crossplatform-$(Platform)-$(Configuration)</OutputPath>
        <PublishDir>$(MSBuildProjectDirectory)\..\_publish\crossplatform-$(Platform)\SilKitFmuImporter-$(Version)-xPlatform-$(Platform)</PublishDir>
        <OsDefined>True</OsDefined>
    </PropertyGroup>

    <PropertyGroup>
        <CommonImported>True</CommonImported>
    </PropertyGroup>

    <Target Name="PrepareSilKitUbuntu" BeforeTargets="BuildAll;Build" Condition="!Exists('$(SilKitDirBase)/libSilKit.so')">
        <PropertyGroup>
            <SilKitUrl Condition="'$(SilKitUrl)' == ''">https://github.com/vectorgrp/sil-kit/releases/download/sil-kit%2Fv4.0.29/</SilKitUrl>
            <SilKitUbuntuName>SilKit-4.0.29-ubuntu-18.04-x86_64-gcc</SilKitUbuntuName>
        </PropertyGroup>

        <Message Text="Downloading SIL Kit (Ubuntu) archive from '$(SilKitUrl)'..." Importance="High" />
        <DownloadFile
            SourceUrl="$(SilKitUrl)$(SilKitUbuntuName).zip"
            DestinationFolder="$(SilKitDirBase)">
            <Output TaskParameter="DownloadedFile" ItemName="Content" />
        </DownloadFile>
        <Message Text="Extracting SIL Kit (Ubuntu) library for later use..." Importance="High" />
        <Unzip
            SourceFiles="$(SilKitDirBase)$(SilKitUbuntuName).zip"
            DestinationFolder="$(SilKitDirBase)/ubuntu"
            OverwriteReadOnlyFiles="true"
        />
        <Move SourceFiles="$(SilKitDirBase)/ubuntu/$(SilKitUbuntuName)/SilKit/lib/libSilKit.so"
              OverwriteReadOnlyFiles="true"
              DestinationFiles="$(SilKitDirBase)/libSilKit.so" />
        <Message Text="Cleaning up SIL Kit (Ubuntu) download artifacts..." Importance="High" />
        <RemoveDir Directories="$(SilKitDirBase)/ubuntu" />
        <Delete Files="$(SilKitDirBase)$(SilKitUbuntuName).zip" />
    </Target>

    <Target Name="PrepareSilKitWindows" BeforeTargets="BuildAll;Build" Condition="!Exists('$(SilKitDirBase)/SilKit.dll')">
        <PropertyGroup>
            <SilKitUrl Condition="'$(SilKitUrl)' == ''">https://github.com/vectorgrp/sil-kit/releases/download/sil-kit%2Fv4.0.29/</SilKitUrl>
            <SilKitWinName>SilKit-4.0.29-Win-x86-VS2017</SilKitWinName>
        </PropertyGroup>

        <Message Text="Downloading SIL Kit (Windows) archive from '$(SilKitUrl)'..." Importance="High" />
        <DownloadFile
            SourceUrl="$(SilKitUrl)$(SilKitWinName).zip"
            DestinationFolder="$(SilKitDirBase)">
            <Output TaskParameter="DownloadedFile" ItemName="Content" />
        </DownloadFile>

        <Message Text="Extracting SIL Kit (Windows) library for later use..." Importance="High" />
        <Unzip
            SourceFiles="$(SilKitDirBase)$(SilKitWinName).zip"
            DestinationFolder="$(SilKitDirBase)/win"
            OverwriteReadOnlyFiles="true"
        />
        <Move SourceFiles="$(SilKitDirBase)/win/$(SilKitWinName)/SilKit/bin/SilKit.dll"
              OverwriteReadOnlyFiles="true"
              DestinationFiles="$(SilKitDirBase)/SilKit.dll" />

        <Message Text="Cleaning up SIL Kit (Windows) download artifacts..." Importance="High" />
        <RemoveDir Directories="$(SilKitDirBase)/win" />
        <Delete Files="$(SilKitDirBase)$(SilKitWinName).zip" />
    </Target>

    <!--Note that there is no target for OSX yet as SIL Kit does not provide packages for OSX-->
</Project>
